<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title><%= event.title %> - Event Details</title>

    <!-- Bootstrap CSS -->
    <link 
      rel="stylesheet"  
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"  
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"
    />
    <!-- Global CSS -->
    <link rel="stylesheet" href="/CSS/styles.css" />
    <!-- Page-specific CSS -->
    <link rel="stylesheet" href="/CSS/eventSingle.css" />
  </head>
  <body>
    <!-- Include Header Partial -->
    <%- include('../partials/header') %>
    <%- include('../partials/sidebar') %>

    <!-- Single Event Details Section -->
    <div class = main-content>
      <section class="container mt-5">
        <div class="row">
          <div class="col-md-6">
            <img src="<%= event.imagePath %>" alt="<%= event.title %>" class="img-fluid" />
          </div>
          <div class="col-md-6">
            <h1><%= event.title %></h1>
            <p><strong>Date:</strong>
              <% if (event.date) { %>
                <%= new Date(event.date).toUTCString() %>
              <% } else { %>
                <em>Date not available</em>
              <% } %>
            </p>
            <p><strong>Location:</strong> <%= event.location %></p>
            <p><strong>Description:</strong></p>
            <p><%= event.description %></p>
            <% if (!event.isActive) { %>
              <p class="text-danger"><strong>This event has already passed.</strong></p>
            <% } %>
            <!-- RSVP button -->
            <% if (isOwner) { %>
              <!-- Do nothing: Hide RSVP button for event creator -->
            <% } else { %>
              <button
              id="rsvpButton<%= event.id %>"
              data-event-id="<%= event.id %>"
              class="btn <%= user && user.rsvpedEvents.some(rsvp => rsvp._id.toString() === event._id.toString()) ? 'btn-success' : 'btn-primary' %>"
              <%= user ? '' : 'disabled' %>
              >
              <%= user
                ? (user.rsvpedEvents.some(rsvp => rsvp._id.toString() === event._id.toString()) ? 'RSVP Confirmed' : 'RSVP Now')
                : 'Log in to RSVP'
              %>
              <% } %>
            <% if (isOwner) { %>
              <button onclick="deleteEvent('<%= event._id %>')" class="btn btn-danger">Delete Event</button>
            <% } %>
          </div>
        </div>
      </section>
    </div>

    <!-- Include Footer Partial -->
    <%- include('../partials/footer') %>

    <!-- JavaScript -->
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.2/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<!-- Script to Handle RSVP tracking -->
<script>

  // Handle RSVP tracking
    document.addEventListener("DOMContentLoaded", () => {

      // RSVP Button Event Listeners
      const rsvpButtons = document.querySelectorAll("[id^='rsvpButton']");

      rsvpButtons.forEach((button) => {
        button.addEventListener('click', async () => {
          const eventId = button.dataset.eventId;

          try {
            const response = await fetch(`/events/${eventId}/rsvp`, {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
            });

            if (response.ok) {
              const result = await response.json();
              const rsvpConfirmed = result.rsvpConfirmed;

              // Update button text and class
              updateRsvpButton(button, rsvpConfirmed);
            } else {
              const errorMessage = await response.text();
              alert('Error: ' + errorMessage);
            }
          } catch (error) {
            console.error('Error processing RSVP:', error);
            alert('An unexpected error occurred.');
          }
        });
      });

      function updateRsvpButton(button, isConfirmed) {
        if (isConfirmed) {
          button.textContent = "RSVP Confirmed";
          button.classList.remove("btn-primary");
          button.classList.add("btn-success");
        } else {
          button.textContent = "RSVP Now";
          button.classList.remove("btn-success");
          button.classList.add("btn-primary");
        }
      }
    });
    
    async function deleteEvent(eventId) {
      if (confirm('Are you sure you want to delete this event?')) {
        try {
          const response = await fetch(`/events/${eventId}`, { method: 'DELETE' });
    
          if (response.ok) {
            alert('Event deleted successfully!');
            window.location.href = '/events';
          } else if (response.status === 401) {
            alert('You must be logged in to delete this event.');
          } else if (response.status === 403) {
            alert('You are not authorized to delete this event.');
          } else {
            const errorText = await response.text();
            alert('Error: ' + errorText);
          }
        } catch (err) {
          console.error('Error deleting event:', err);
          alert('An unexpected error occurred.');
        }
      }
    }
    
    
  
</script>
  </body>
</html>
